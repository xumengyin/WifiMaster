apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd_HHmmss')
    return formattedDate
}
android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.jerry.wifimaster"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk{
            abiFilters 'armeabi-v7a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions{
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {

        debug {
            storeFile file("makestep.jks")
            storePassword 'yxlqaz001'
            keyAlias 'makestep'
            keyPassword 'yxlqaz001'
            applicationVariants.all { variant ->
                variant.outputs.all {
                    if (outputFileName.endsWith('.apk')) {
                        def apkName = "wifiMaster_${buildTime()}.apk"
                        //这里使用之前定义apk文件名称
                        outputFileName = apkName
                    }
                }
            }
        }

        release {
            storeFile file("makestep.jks")
            storePassword 'yxlqaz001'
            keyAlias 'makestep'
            keyPassword 'yxlqaz001'
            applicationVariants.all { variant ->
                variant.outputs.all {
                    if (outputFileName.endsWith('.apk')) {
                        def apkName = "wifiMaster_${buildTime()}.apk"
                        //这里使用之前定义apk文件名称
                        outputFileName = apkName
                    }
                }
            }
        }
    }
}
repositories {
    flatDir {
        dirs 'libs'
        dirs project(':baseLib').file('libs')
        dirs project(':adLibs').file('libs')
    }
}
dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar","*.aar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    api project(path: ':baseLib')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.qmuiteam:qmui:2.0.0-alpha10'
    //implementation 'com.thanosfisherman.wifiutils:wifiutils:1.6.5'
    implementation 'com.github.tbruyelle:rxpermissions:0.12'
    implementation "io.reactivex.rxjava3:rxjava:3.0.12"
    implementation 'com.blankj:utilcodex:1.30.6'
    implementation 'com.thanosfisherman.elvis:elvis:3.0'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'
   // implementation files('../libs/oaid_sdk_1.0.25.aar')


//    implementation 'com.dinuscxj:recycleritemdecoration:1.0.0'


}